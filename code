import numpy as np
import matplotlib.pyplot as plt

# Data from Table II
z = np.array([0.07, 0.09, 0.12, 0.17, 0.179, 0.199, 0.20, 0.27, 0.28, 0.352, 0.38, 0.4, 0.4004, 0.425, 0.445, 0.47, 0.4783, 0.48, 0.593, 0.68, 0.75, 0.781, 0.8, 0.875, 0.88, 0.9, 1.037, 1.3, 1.363, 1.43, 1.53, 1.75, 1.965])
Hz = np.array([69.0, 69, 68.6, 83, 75, 75, 72.9, 77, 88.8, 83, 83, 95, 77, 87.1, 89.2, 89, 80.9, 97, 104, 92, 98.8, 105, 113.1, 125, 90, 117, 154, 168, 160, 177, 140, 202, 186.5])
sigma_Hz = np.array([19.6, 12, 26.2, 8, 4, 5, 29.6, 14, 36.6, 14, 13.5, 17, 10.2, 11.2, 12.9, 49.6, 9, 62, 13, 8, 33.6, 12, 15.1, 17, 40, 23, 20, 20, 33.6, 18, 14, 40, 50.4])

# Define the theoretical H(z) function for a flat ΛCDM model
def H_th(z, H0, Omega_m):
    Omega_Lambda = 1 - Omega_m
    return H0 * np.sqrt(Omega_m * (1 + z)**3 + Omega_Lambda)

# Best-fit parameters
H0_best = 70.17
Omega_m_best = 0.27

# Generate theoretical curve
z_theory = np.linspace(0, 2, 100)
Hz_theory = H_th(z_theory, H0_best, Omega_m_best)

# Create the plot
plt.figure(figsize=(10, 6))

# Plot observed data with error bars
plt.errorbar(z, Hz, yerr=sigma_Hz, fmt='o', color='blue', ecolor='red', capsize=5, label='Observed H(z)')

# Plot theoretical curve
plt.plot(z_theory, Hz_theory, 'g-', label='Theoretical H(z) (best-fit)')

# Customize the plot
plt.xlabel('Redshift (z)')
plt.ylabel('H(z) [km/s/Mpc]')
plt.title('H(z) Measurements and Theoretical Model')
plt.legend()
plt.grid(True, linestyle='--', alpha=0.7)

# Adjust y-axis to ensure all data points are visible
plt.ylim(0, max(np.max(Hz + sigma_Hz), np.max(Hz_theory)) * 1.1)

# Add text box with best-fit parameters
plt.text(0.05, 0.95, f'Best-fit parameters:\nH₀ = {H0_best:.2f} km/s/Mpc\nΩₘ = {Omega_m_best:.2f}',
         transform=plt.gca().transAxes, fontsize=10, verticalalignment='top',
         bbox=dict(boxstyle='round', facecolor='white', alpha=0.8))

# Show the plot
plt.tight_layout()
plt.show()
